// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [ "syslog/client.shard.cml" ],
    program: {
        runner: "elf",
        binary: "bin/echo_server_sc_bin",
    },
    capabilities: [
        { protocol: "test.placeholders.Echo" },
    ],
    expose: [
        {
            protocol: "test.placeholders.Echo",
            from: "self",
        },
    ],
    config: {
        my_flag: { type: "bool" },
        my_uint8: { type: "uint8" },
        my_uint16: { type: "uint16" },
        my_uint32: { type: "uint32" },
        my_uint64: { type: "uint64" },
        my_int8: { type: "int8" },
        my_int16: { type: "int16" },
        my_int32: { type: "int32" },
        my_int64: { type: "int64" },
        my_string: {
            type: "string",
            max_size: 6,
        },
        my_vector_of_flag: {
            type: "vector",
            element: { type: "bool" },
            max_count: 2,
        },
        my_vector_of_uint8: {
            type: "vector",
            element: { type: "uint8" },
            max_count: 2,
        },
        my_vector_of_uint16: {
            type: "vector",
            element: { type: "uint16" },
            max_count: 2,
        },
        my_vector_of_uint32: {
            type: "vector",
            element: { type: "uint32" },
            max_count: 2,
        },
        my_vector_of_uint64: {
            type: "vector",
            element: { type: "uint64" },
            max_count: 2,
        },
        my_vector_of_int8: {
            type: "vector",
            element: { type: "int8" },
            max_count: 2,
        },
        my_vector_of_int16: {
            type: "vector",
            element: { type: "int16" },
            max_count: 2,
        },
        my_vector_of_int32: {
            type: "vector",
            element: { type: "int32" },
            max_count: 2,
        },
        my_vector_of_int64: {
            type: "vector",
            element: { type: "int64" },
            max_count: 2,
        },
        my_vector_of_string: {
            type: "vector",
            element: {
                type: "string",
                max_size: 6,
            },
            max_count: 2,
        },
    },
}
